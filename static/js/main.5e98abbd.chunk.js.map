{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["confirm","Modal","layout","labelCol","span","wrapperCol","App","useState","modelVisiable","setModelVisiable","data","setData","editData","setEditData","editInfo","setEditInfo","name","item","useEffect","JSON","parse","localStorage","getItem","handleDelete","k","title","onOk","index","splice","setItem","stringify","message","success","onCancel","console","log","type","className","onClick","map","i","display1","display2","display3","key","actions","SmileOutlined","d","temp","length","weight","push","nameIndex","parseInt","Math","random","content","okText","cancelText","EditOutlined","DeleteOutlined","isEmpty","style","marginLeft","marginRight","visible","error","undefined","unshift","Item","label","value","onChange","e","target","editName","width","min","v","editLineWeight","MinusOutlined","deleteLine","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5e98abbd.chunk.js","sourcesContent":["import React,{ useState, useEffect, Fragment } from 'react';\nimport { Card, Button, Modal, Input, Form, InputNumber, message } from 'antd';\nimport { EditOutlined,MinusOutlined,DeleteOutlined,SmileOutlined } from '@ant-design/icons';\nimport { isEmpty } from 'lodash';\n \nimport './App.css';\n\nconst { confirm } = Modal;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\n\nfunction App() {\n  const [modelVisiable,setModelVisiable] = useState(false);\n  const [data,setData] = useState([]);\n  const [editData,setEditData] = useState({});\n  const [editInfo,setEditInfo] = useState({});\n  const { name,item = [] } = editData;\n\n  useEffect(()=>{\n    const data = JSON.parse(localStorage.getItem(\"data\") || \"[]\" )\n    setData(data);\n  },[])\n\n  const cancel = () => {\n    setEditData({});\n    setModelVisiable(false);\n  }\n\n  const addLine = () => {\n    item.push({ name: '', weight: 10 });\n    setEditData({...editData,item})\n  }\n\n  const editLineWeight = (value,i) => {\n    item[i].weight = value;\n    setEditData({...editData,item})\n  }\n\n  const editName = (name,i) => {\n    item[i].name = name;\n    setEditData({...editData,item})\n  }\n\n  const deleteLine = (i) => {\n    item.splice(i,1)\n    setEditData({...editData,item})\n  }\n\n  const save = () => {\n    const { index } = editInfo;\n    const { name, item } = editData;\n    if(isEmpty(name)){\n      message.error(\"项目名必填\")\n      return\n    }\n    if(isEmpty(item)){\n      message.error(\"必须至少有一项\")\n      return\n    }\n    for(let i =0; i< item.length;i++){\n      if(isEmpty(item[i].name)){\n        message.error(\"单行名称必填\")\n        return\n      }\n    }\n    if(index === undefined){\n      data.unshift(editData)\n      setData(data)\n      localStorage.setItem(\"data\",JSON.stringify(data))\n      setModelVisiable(false)\n      message.success(\"保存成功\")\n    }else{\n      data[index] = editData\n      setData(data)\n      localStorage.setItem(\"data\",JSON.stringify(data))\n      setModelVisiable(false)\n      message.success(\"保存成功\")\n    }\n  }\n\n  const handleCreate = () => {\n    setEditInfo({})\n    setEditData({})\n    setModelVisiable(true)\n  }\n\n  const handleEdit = (index) => {\n    setEditInfo({ index })\n    setEditData(data[index])\n    setModelVisiable(true)\n    localStorage.setItem(\"data\",JSON.stringify(data))\n  }\n  \n  const deleteData = (index) => {\n    data.splice(index,1)\n    setData([...data])\n    localStorage.setItem(\"data\",JSON.stringify(data))\n    message.success(\"删除成功\")\n  }\n\n  const handleDelete = (k) => {\n    confirm({\n      title: '确认删除吗',\n      onOk() {\n        deleteData(k)\n      },\n      onCancel() {\n        console.log('Cancel');\n      },\n    });\n  }\n\n\n  const random = (index) => {\n    const d = data[index].item;\n    const temp = []\n    for(let i = 0; i< d.length;i++){\n      for(let k = 0; k< d[i].weight ;k++){\n        temp.push(d[i].name);\n      }\n    }\n    const nameIndex = parseInt(Math.random()*(temp.length+1),10)\n    Modal.confirm({\n      title: '结果是。。。',\n      content: temp[nameIndex],\n      okText: '确认',\n      cancelText: '取消',\n    });\n  }\n\n  return (\n    <div>\n      <Button type=\"primary\" className=\"createBtn\" onClick={handleCreate} >新建</Button>\n      <div className=\"App\">\n        {\n          data.map((i,k)=>{\n            const { name, item = [] } = i;\n            const display1 = (item[0] && item[0].name) || ''\n            const display2 = (item[1] && item[1].name) || ''\n            const display3 = (item[2] && item[2].name) || ''\n            return (\n            <Card \n              className=\"card\" \n              title={name}\n              key={k}\n              actions={[\n                <SmileOutlined onClick={() => random(k)} />,\n                <EditOutlined onClick={() => handleEdit(k)}/>,\n                <DeleteOutlined onClick={() => handleDelete(k)} />,\n              ]}\n              >\n              <p>{display1}</p>\n              <p>{display2}</p>\n              <p>{display3}</p>\n              <p>...</p>\n          </Card>\n            )\n          })\n        }\n        {\n          isEmpty(data) && <h1 style={{ marginLeft: 'auto',marginRight: 'auto' }}>点击左上角的新建按钮新建项目</h1>\n        }\n        <Modal\n          visible={modelVisiable}\n          onCancel={cancel}\n          title=\"项目\"\n          onOk={save}\n         >\n           <Form\n            {...layout}\n           >\n             <Form.Item\n              label=\"项目名称\"\n             >\n                <Input value={name} onChange={(e)=>setEditData({ ...editData,name: e.target.value, })} />\n             </Form.Item>\n\n             {\n                 item.map((i,k)=>{\n                   const { name, weight } = i;\n                  return (\n                    <Fragment key={k}>\n                      <Form.Item\n                        label=\"单行名称\"\n                      >\n                          <Input\n                            value={name}\n                            onChange={(e)=>editName(e.target.value,k)}\n                            style={{width: '60%'}}\n                          />\n                          <InputNumber\n                            style={{width: '20%',marginLeft: '5px'}}\n                            min={1}\n                            value={weight}\n                            onChange={(v) => editLineWeight(v,k)}\n                           />\n                          <MinusOutlined\n                            style={{ marginLeft: '20px' }}\n                            onClick={() => deleteLine(k)}\n                          />\n                      </Form.Item>\n                    </Fragment>\n                  )\n                  \n                 })\n               }\n             <Button type=\"primary\" onClick={addLine} >新增一行</Button>\n           </Form>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}